syntax = "proto3";

package github.com.edlanioj.kbu.payments;

option go_package = "application/grpc/protofiles;pb";


enum TransactionType {
  to_user = 0;
	to_service = 1;
	to_store = 2;
}

message Transaction {
  string ID = 1;
  float amount = 2;
  string status = 3;
  string currency = 4;
  string accountFrom = 5;
  string accountTo = 6;
  string type = 7;
  string externalID = 8;
  string createdAt = 9;
  string updatedAt = 10;
}

message PaginationRequest {
  int32 page = 1;
  int32 limit = 2;
  string sort = 3;
}

message Request {
  string ID = 1;
}

message RegisterRequest {
  string accountFrom = 1;
  string accountTo = 2;
  string externalID = 3;
  TransactionType type = 4;
  string currency = 5;
  float amount = 6;
}

message GetRequest {
  string id = 1;
  string transactionID = 2;
}

message GetByTypeRequest {
  TransactionType type = 1;
  string transactionID = 2;
}

message ListByTypeRequest {
  TransactionType type = 1;
  PaginationRequest pagination = 2;
}

message ListRequest {
  string ID = 1;
  PaginationRequest pagination = 2;
}

message ListResponse {
  repeated Transaction transactions = 1;
  int32 total = 2;
  string error = 3;
}

message Response {
  Transaction transaction = 1;
  string error = 2;
}

service PaymentService {
  rpc Register (RegisterRequest) returns (Response);
  rpc Get (Request) returns (Response);
  rpc List (PaginationRequest) returns (ListResponse);
  rpc GetByType (GetByTypeRequest) returns (Response);
  rpc ListByType (ListByTypeRequest) returns (ListResponse);
  rpc GetByReference (GetRequest) returns (Response);
  rpc ListByReference (ListRequest) returns (ListResponse);
  rpc GetByAccountFrom (GetRequest) returns (Response);
  rpc ListByAccountFrom (ListRequest) returns (ListResponse);
  rpc GetByAccountTo (GetRequest) returns (Response);
  rpc ListByAccountTo (ListRequest) returns (ListResponse);
}
